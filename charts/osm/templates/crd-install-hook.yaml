apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-install-crds
  namespace: {{ include "osm.namespace" . }}
  labels:
    {{- include "osm.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-install-crds
  namespace: {{ include "osm.namespace" . }}
  labels:
    {{- include "osm.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-install-crds
    namespace: {{ include "osm.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-install-crds
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-install-crds
  namespace: {{ include "osm.namespace" . }}
  labels:
    {{- include "osm.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-install-crds
  namespace: {{ include "osm.namespace" . }}
  annotations:
    helm.sh/hook: pre-install
  labels:
    {{- include "osm.labels" . | nindent 4 }}
spec:
  serviceAccountName: {{ .Release.Name }}-install-crds
  restartPolicy: OnFailure
  containers:
  - name: install-crd-job
    image: "{{ .Values.OpenServiceMesh.image.registry }}/osm-crd:{{ .Values.OpenServiceMesh.image.tag }}"
    imagePullPolicy: {{ .Values.OpenServiceMesh.image.pullPolicy }}
    command:
            - sh
            - -c
            - >
             kubectl apply -f /osm-crd/crds;
{{- if .Values.OpenServiceMesh.imagePullSecrets }}
  imagePullSecrets:
{{ toYaml .Values.OpenServiceMesh.imagePullSecrets | indent 8 }}
{{- end }}
